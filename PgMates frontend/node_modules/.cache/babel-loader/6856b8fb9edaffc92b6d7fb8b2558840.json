{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Final CDAC Project\\\\PgMates frontend\\\\src\\\\pages\\\\AdminLogin.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../components/login.css\";\nimport aptvideo from \"./video/aptvideo.mp4\";\nimport { useFormik } from \"formik\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch } from \"react-redux\";\nimport { YupAdminLogin } from \"../schemas/AdminYup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminLogin() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AdminLoginTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = AdminLogin;\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\n\nfunction AdminLoginTable() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const checkUser = async (email, password) => {\n    let user = {\n      userid: email,\n      pwd: password\n    };\n    await axios.post(\"http://localhost:8080/api/admin/avalidate\", user).then(resp => {\n      sessionStorage.setItem(\"uname\", resp.data.uname);\n      sessionStorage.setItem(\"role\", resp.data.role);\n      sessionStorage.setItem(\"userid\", resp.data.userid);\n      sessionStorage.setItem(\"id\", resp.data.id);\n      dispatch({\n        type: 'IsLoggedIn'\n      });\n      Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: \"Welcome \" + resp.data.role,\n        showConfirmButton: false,\n        timer: 1500\n      });\n      navigate('/');\n    }).catch(error => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: error.response.data\n      });\n    });\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useFormik({\n    initialValues: initialValues,\n    validationSchema: YupAdminLogin,\n    onSubmit: value => {\n      console.log(JSON.stringify(value));\n      console.log(value.email);\n      checkUser(value.email, value.password);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        left: \"50%\",\n        top: \"50%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        transform: \"translate(-50%,-50%)\",\n        zIndex: \"-1\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: aptvideo,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"p-3 text-center bg-primary rounded-top bg-gradient text-white shadow\",\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"text\",\n            value: values.email,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email Id\", errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errors\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 47\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password\", errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errors\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 53\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminLoginTable, \"lW9yC524tmbhcjx7ZyTYaz0RCnE=\", false, function () {\n  return [useNavigate, useDispatch, useFormik];\n});\n\n_c2 = AdminLoginTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminLogin\");\n$RefreshReg$(_c2, \"AdminLoginTable\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Final CDAC Project/PgMates frontend/src/pages/AdminLogin.jsx"],"names":["useState","aptvideo","useFormik","axios","useNavigate","Swal","useDispatch","YupAdminLogin","AdminLogin","initialValues","email","password","AdminLoginTable","navigate","dispatch","checkUser","user","userid","pwd","post","then","resp","sessionStorage","setItem","data","uname","role","id","type","fire","position","icon","title","showConfirmButton","timer","catch","error","text","response","values","errors","touched","handleChange","handleBlur","handleSubmit","validationSchema","onSubmit","value","console","log","JSON","stringify","width","left","top","height","objectFit","transform","zIndex"],"mappings":"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","sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport \"../components/login.css\";\r\nimport aptvideo from \"./video/aptvideo.mp4\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { YupAdminLogin } from \"../schemas/AdminYup\";\r\n\r\n\r\nexport default function AdminLogin() {\r\n  return (\r\n    <div>\r\n      <AdminLoginTable />\r\n    </div>\r\n  );\r\n}\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\"\r\n}\r\nfunction AdminLoginTable() {\r\n\r\n  const navigate=useNavigate()\r\n  \r\n  const dispatch=useDispatch()\r\n\r\n  const checkUser = async (email,password) => {\r\n    let user = { userid:email, pwd: password };\r\n    await axios.post(\"http://localhost:8080/api/admin/avalidate\", user)\r\n    .then(resp=>{\r\n        sessionStorage.setItem(\"uname\",resp.data.uname)\r\n        sessionStorage.setItem(\"role\",resp.data.role)\r\n        sessionStorage.setItem(\"userid\",resp.data.userid)\r\n        sessionStorage.setItem(\"id\",resp.data.id)\r\n        dispatch({type:'IsLoggedIn'})\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Welcome \"+resp.data.role,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n      });\r\n      navigate('/')\r\n    })\r\n    .catch(error=>{\r\n      Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: error.response.data          \r\n        });   \r\n    }) \r\n  };\r\n  const { values, errors, touched, handleChange, handleBlur, handleSubmit } =\r\n  useFormik({\r\n\r\n    initialValues: initialValues,\r\n    validationSchema: YupAdminLogin,\r\n    onSubmit: (value) => {\r\n      console.log(JSON.stringify(value));\r\n      console.log(value.email)\r\n      checkUser(value.email,value.password);\r\n    }\r\n  });  \r\n  return (\r\n    <div>\r\n<video\r\n        autoPlay\r\n        loop\r\n        muted\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n          height: \"100%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n          zIndex: \"-1\",\r\n        }}\r\n      >\r\n        <source src={aptvideo} type=\"video/mp4\" />\r\n      </video>\r\n      \r\n      <div className=\"center shadow\">\r\n        <h5 className=\"p-3 text-center bg-primary rounded-top bg-gradient text-white shadow\">Admin Login</h5>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"txt_field\">\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <span></span>\r\n            <label>Email Id\r\n            {errors.email && touched.email ? (<span className=\"errors\">{errors.email}\r\n              </span>) : null}\r\n            </label>\r\n          </div>\r\n          <div className=\"txt_field\">\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <span></span>\r\n            <label>Password\r\n            {errors.password && touched.password ? (<span className=\"errors\">{errors.password}\r\n              </span>) : null}\r\n            </label>\r\n          </div>        \r\n          <input\r\n            type=\"submit\"\r\n            value=\"Login\"\r\n          />          \r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}